<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.shopping.mall.dao.UserMapper">
  
  <resultMap type="seller" id="sellerResultMap">
		<result property="role" column="ROLE"/>
		<result property="userID" column="USER_ID"/>
		<result property="userPW" column="USER_PW"/>
		<result property="userName" column="USER_NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="address1" column="ADDRESS1"/>
		<result property="address2" column="ADDRESS2"/>
		<result property="address3" column="ADDRESS3"/>
		<result property="email" column="EMAIL"/>
		<result property="businessNumber" column="BUSINESS_NUMBER"/>
		<result property="bank" column="BANK"/>
		<result property="accountNumber" column="ACCOUNT_NUMBER"/>
	</resultMap>
  
  <select id="idCheck" resultType="String">
  	select 
  		user_ID as "userID"
  	from 
  		sp_join
  	where
  		user_ID = #{userID}
  </select>
  
  <insert id="nomalJoin">
  	insert into sp_join(
  						  role	  
  						, user_ID
  						, user_PW 
  						, user_name
  						, phone
  						, address1
  						, address2
  						, address3
  						, email)
  			 		 values(
  			 		 	  #{role}     
  			 		 	, #{userID}
  			  			, #{userPW}
  			  			, #{userName}
  			  			, #{phone}
  			  			, #{address1}
  			  			, #{address2}
  			  			, #{address3}
  			  			, #{email}) 
  </insert>
  
  <insert id="sellerJoin">
  	insert into sp_join(
  						  role	  
  						, user_ID
  						, user_PW
  						, user_name
  						, phone
  						, address1
  						, address2
  						, address3
  						, email
  						, business_number
  						, bank
  						, account_number)
  			 		 values(
  			 		 	  #{role}     
  			 		 	, #{userID}
  			  			, #{userPW}
  			  			, #{userName}
  			  			, #{phone}
  			  			, #{address1}
  			  			, #{address2}
  			  			, #{address3}
  			  			, #{email}
  			  			, #{businessNumber}
  			  			, #{bank}
  			  			, #{accountNumber}) 
  </insert>
  
  <select id="login" parameterType="String" resultType="seller" resultMap="sellerResultMap">
  	select
  		*
  	from
  		sp_join
  	where
  		user_ID = #{userID} and length(user_PW)>3
  </select>
  
  <select id="getInfo" parameterType="String" resultType="seller" resultMap="sellerResultMap">
  	select
  		*
  	from
  		sp_join
  	where
  		user_id = #{userID}
  </select>
  
  <select id="findUserID" parameterType="hashMap" resultType="String">
  	select
  		user_ID
  	from
  		sp_join
  	where
  		user_name = #{userName} and email = #{email}
  </select>
  
   <select id="findUserPW" parameterType="hashMap" resultType="String">
  	select
  		user_ID
  	from
  		sp_join
  	where
  		user_ID = #{userID} and email = #{email}
  </select>
  
   <update id="newPW" parameterType="hashMap">
  	update
  		  sp_join
  	set
  		  user_PW = #{newPW}
	where
		  user_ID = #{userID}
  </update>
  
  <update id="nupdateInfo" parameterType="seller">
  	update
  		  sp_join
  	set
  		  user_PW = #{userPW}
		, phone = #{phone}
		, address1 = #{address1}
		, address2 = #{address2}
		, address3 = #{address3}
		, email = #{email}
	where
		  user_ID = #{userID}
  </update>
 
  <update id="gupdateInfo" parameterType="seller">
  	update
  		  sp_join
  	set
  		  user_PW = #{userPW}
		, phone = #{phone}
		, address1 = #{address1}
		, address2 = #{address2}
		, address3 = #{address3}
		, email = #{email}
		, business_number = #{businessNumber}
		, bank = #{bank}
		, account_number = #{accountNumber}
	where
		user_ID = #{userID}
  </update>
  
  <delete id="deleteUser" parameterType="String">
  	delete from
  		sp_join
  	where
  		user_ID = #{userID}
  </delete>
  
  <delete id="deleteProduct" parameterType="String">
  	delete from
  		sp_product
  	where
  		product_ID = #{userID}
  </delete>
  </mapper>